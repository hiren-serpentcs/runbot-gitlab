Sending build context to Docker daemon  6.144kB
Step 1/22 : FROM ubuntu:bionic
 ---> 72300a873c2c
Step 2/22 : ENV LANG C.UTF-8
 ---> Using cache
 ---> ab98fafc79ce
Step 3/22 : USER root
 ---> Using cache
 ---> 2e84b049ff5e
Step 4/22 : RUN set -x ;     apt-get update     && apt-get install -y --no-install-recommends     apt-transport-https     build-essential     ca-certificates     curl     file     fonts-freefont-ttf     fonts-noto-cjk     gawk     gnupg     libldap2-dev     libsasl2-dev     libxslt1-dev     node-less     python     python-dev     python-pip     python3     python3-dev     python3-pip     python3-setuptools     python3-wheel     sed     sudo     unzip     xfonts-75dpi     zip     zlib1g-dev
 ---> Using cache
 ---> 678cdfccd6e1
Step 5/22 : RUN curl -sSL http://nightly.odoo.com/odoo.key | apt-key add -     && echo "deb http://nightly.odoo.com/deb/bionic ./" > /etc/apt/sources.list.d/google-chrome.list     && apt-get update     && apt-get install -y -qq google-chrome-stable=71.0.3578.98-1
 ---> Using cache
 ---> 7f5d679ed87e
Step 6/22 : RUN curl -sSL https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2  -o /tmp/phantomjs.tar.bz2     && tar xvfO /tmp/phantomjs.tar.bz2 phantomjs-2.1.1-linux-x86_64/bin/phantomjs > /usr/local/bin/phantomjs     && chmod +x /usr/local/bin/phantomjs     && rm -f /tmp/phantomjs.tar.bz2
 ---> Using cache
 ---> f4ab9a3ffdc6
Step 7/22 : RUN curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb -o /tmp/wkhtml.deb     && apt-get update     && dpkg --force-depends -i /tmp/wkhtml.deb     && apt-get install -y -f --no-install-recommends     && rm /tmp/wkhtml.deb
 ---> Using cache
 ---> d7b412d73f56
Step 8/22 : RUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -     && echo "deb https://deb.nodesource.com/node_8.x stretch main" > /etc/apt/sources.list.d/nodesource.list     && apt-get update     && apt-get install -y nodejs
 ---> Using cache
 ---> 2d8717b42057
Step 9/22 : RUN npm install -g rtlcss
 ---> Using cache
 ---> 309e688f342b
Step 10/22 : RUN npm install -g es-check
 ---> Using cache
 ---> 15a5f30b8599
Step 11/22 : RUN apt-get update     && apt-get install -y python3-markdown
 ---> Using cache
 ---> 6b0f15dd58a1
Step 12/22 : ADD https://raw.githubusercontent.com/brendangregg/FlameGraph/master/flamegraph.pl /usr/local/bin/flamegraph.pl

 ---> Using cache
 ---> 9612ba4e5594
Step 13/22 : RUN chmod +rx /usr/local/bin/flamegraph.pl
 ---> Using cache
 ---> ba672514f705
Step 14/22 : ADD https://raw.githubusercontent.com/odoo/odoo/10.0/debian/control /tmp/p2-control

 ---> Using cache
 ---> d2b4afa83cb7
Step 15/22 : ADD https://raw.githubusercontent.com/odoo/odoo/master/debian/control /tmp/p3-control

 ---> Using cache
 ---> 6f69116cc7a8
Step 16/22 : RUN pip install -U setuptools wheel     && apt-get update     && sed -n '/^Depends:/,/^[A-Z]/p' /tmp/p2-control /tmp/p3-control | awk '/^ [a-z]/ { gsub(/,/,"") ; print }' | sort -u | sed 's/python-imaging/python-pil/'| sed 's/python-pypdf/python-pypdf2/' | DEBIAN_FRONTEND=noninteractive xargs apt-get install -y -qq     && apt-get clean     && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 3c33015643ca
Step 17/22 : ADD https://raw.githubusercontent.com/odoo/odoo/master/requirements.txt /root/p3-requirements.txt

 ---> Using cache
 ---> d6c9dfbd1614
Step 18/22 : ADD https://raw.githubusercontent.com/odoo/odoo/10.0/requirements.txt /root/p2-requirements.txt

 ---> Using cache
 ---> e14e9bc13098
Step 19/22 : RUN pip install --no-cache-dir -r /root/p2-requirements.txt coverage flanker==0.4.38 pylint==1.7.2 phonenumbers redis     && pip3 install --no-cache-dir -r /root/p3-requirements.txt coverage==4.5.4 websocket-client astroid==2.0.4     pylint==1.7.2 phonenumbers pyCrypto dbfread==2.0.7 firebase-admin==2.17.0 flamegraph pdfminer.six==20181108
 ---> Using cache
 ---> 7b0333c6760c
Step 20/22 : RUN groupadd -g 1000 odoo && useradd -u 1000 -g odoo -G audio,video odoo && mkdir /home/odoo && chown -R odoo:odoo /home/odoo && echo "odoo ALL= NOPASSWD: /usr/bin/pip" > /etc/sudoers.d/pip && echo "odoo ALL= NOPASSWD: /usr/bin/pip3" >> /etc/sudoers.d/pip
 ---> Using cache
 ---> 30a073bf047e
Step 21/22 : USER odoo
 ---> Using cache
 ---> fa70dee1a287
Step 22/22 : ENV COVERAGE_FILE /data/build/.coverage
 ---> Using cache
 ---> 73f40b0e9a01
Successfully built 73f40b0e9a01
Successfully tagged odoo:runbot_tests
